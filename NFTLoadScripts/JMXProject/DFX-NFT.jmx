<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DFX -NFT-Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Appointment Manager" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="Chrome Driver Configuration" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Users\VISHAL\Downloads\chromedriver_win32\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/SetUp/JMeter/apache-jmeter-5.3/apache-jmeter-5.3/bin/examples/DFXACIAutomall.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(60000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(3000);
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
Thread.sleep(3000);
System.out.println(&quot;*******Clicked next week button*********&quot;);
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					openDate.click();		
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
Thread.sleep(5000);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)));
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
Thread.sleep(60000);
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
Thread.sleep(3000);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
Thread.sleep(3000); 
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
Thread.sleep(15000);
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
Thread.sleep(15000);
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
Thread.sleep(10000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Wait" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(1500);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(1500);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(1500);
WDS.browser.switchTo().defaultContent();
Thread.sleep(1500);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(30000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
Thread.sleep(1500);
System.out.println(&quot;*******Clicked next week button*********&quot;);
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					openDate.click();		
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
Thread.sleep(10000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
Thread.sleep(30000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
Thread.sleep(3000);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(3000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
Thread.sleep(3000); 
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
Thread.sleep(10000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
Thread.sleep(15000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
Thread.sleep(15000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
Thread.sleep(20000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Test2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-manufacturer-1500983788&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of Manufacturer is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (size - 1));      	
     }
}
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-year-1500983849&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of year is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected year from index ******** &quot;+ (size - 1));         	
     }
}
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of vehicle is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Model from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(10000);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));			
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Transmission from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(10000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Engine from index ******** &quot;+ (size - 1));         	
     }
}
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
System.out.println(&quot; select type of repairing &quot;); 
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Test2-Inprogress-(Function)" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
selectVehicle(&quot;Manufacturer&quot;,&quot;vehicle-manufacturer-1500983788&quot;,lWait);
Thread.sleep(8000);
selectVehicle(&quot;Year&quot;,&quot;vehicle-year-1500983849&quot;,lWait);
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of model is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== model element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected model from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));				
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== transmission element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected transmission from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-engine-1500983934&quot;)));					
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== engine element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== engine Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of drive is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== drive element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== drive Manufacturer from index ******** &quot;+ (index));      	
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
System.out.println(&quot; select type of repairing &quot;); 
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
WDS.sampleResult.sampleEnd();


void selectVehicle(String type,String locator,WebDriverWait lWait) {
		System.out.println(&quot;Method called&quot;); 	
	if (WDS.browser.findElements(By.id(&quot;+locator+&quot;)).size() &gt; 0){ 
		lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;+locator+&quot;)));		
		int idx = 0;
		WDS.browser.findElement(By.id(&quot;+locator+&quot;)).click();	
		Thread.sleep(2000);	
	     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;&quot;+locator+&quot;&apos;]/div[2]/div&quot;));
	     int size = elements.size();
	     int index = size.intdiv(2);
		System.out.println(&quot;&lt;====== Size of &quot; + type + &quot; is ******** &quot;+ size);     
		System.out.println(&quot;&lt;====== &quot;+ type +&quot; element index is ******** &quot;+ index);   	
	     if(size &gt; 0){
			lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
	     	elements.get(index).click();
			System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (index));      	
	     }
	}
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Stage2-Old" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-manufacturer-1500983788&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of Manufacturer is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-5)));	
     	elements.get(size-5).click();
		System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (size - 1));      	
     }
}
Thread.sleep(8000);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-year-1500983849&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of year is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected year from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(8000);
//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));	
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of vehicle is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Model from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(8000);
//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));			
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(size-1)));     	
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Transmission from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
		System.out.println(&quot;&lt;====== Selected Engine from index ******** &quot;+ (size - 1));         	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
	System.out.println(&quot;&lt;====== Size is ******** &quot;+ size);     
     if(size &gt; 0){
     	elements.get(size-1).click();
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
System.out.println(&quot; select type of repairing &quot;); 
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Stage2v0" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-manufacturer-1500983788&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of Manufacturer is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== Manufacturer element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-year-1500983849&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of year is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== year element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected year from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of model is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== model element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected model from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));				
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== transmission element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected transmission from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-engine-1500983934&quot;)));					
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== engine element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== engine Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of drive is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== drive element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== drive Manufacturer from index ******** &quot;+ (index));      	
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
System.out.println(&quot; select type of repairing &quot;); 
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Stage2-SharedWithTeam" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-manufacturer-1500983788&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of Manufacturer is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== Manufacturer element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-year-1500983849&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of year is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== year element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected year from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of model is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== model element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected model from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));				
	int idx = 0;
	try {
		WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	}
	catch(org.openqa.selenium.StaleElementReferenceException ex)
	{
		System.out.println(&quot;Stale element for transmission&quot;);  
	}
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== transmission element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected transmission from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-engine-1500983934&quot;)));					
	int idx = 0;
	try {
		WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	}
	catch(org.openqa.selenium.StaleElementReferenceException ex)
	{
		System.out.println(&quot;Stale element for engine&quot;);  
	}	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== engine element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== engine Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of drive is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== drive element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== drive Manufacturer from index ******** &quot;+ (index));      	
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-edit-appt-tab__selected-services&apos;]&quot;)));
if (WDS.browser.findElements(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])&quot;)).size() &gt; 3){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
	System.out.println(&quot; select type of repairing &quot;);	
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	Thread.sleep(3000);		
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)));		
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-AM-Stage2-LoopSolution" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[3]&quot;)).click();
Thread.sleep(20000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)));
WDS.browser.findElement(By.cssSelector(&quot;a[ng-click*=&apos;nextWeek()&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked next week button*********&quot;);
lWait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(&quot;#date-picker-choose-date-days&quot;)));
List dateList = WDS.browser.findElements(By.cssSelector(&quot;#date-picker-choose-date-days&quot;));
int availableDay = 0;
org.openqa.selenium.WebElement openDate;
		for (WebElement date : dateList) {
			System.out.println(&quot;******   Date is ********* &quot; + date.getText());
			if (date.getCssValue(&quot;cursor&quot;).contains(&quot;pointer&quot;) &amp;&amp; !date.getText().contains(&quot;Sun&quot;) &amp;&amp; !date.getText().contains(&quot;Sat&quot;)) {
				availableDay++;
				if (availableDay == 1) {
					openDate = date;
					System.out.println(&quot;*******Inside break, free day found*********before&quot;);	
					lWait.until(ExpectedConditions.elementToBeClickable(openDate));					
					Thread.sleep(5000);
					openDate.click();	
					Thread.sleep(5000);
					System.out.println(&quot;*******Inside break, free day found*********after&quot;);								
					break;
				}
			}
		}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked create button*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
System.out.println(&quot;*******WAIT CONDITION pass for ******Clicked appointment for new customer*********&quot;);	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;button-el&apos;]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Appointment for a New Customer&apos;]&quot;)).click();
System.out.println(&quot;*******Clicked appointment for new customer*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-first-name-1500980255&quot;)));
WDS.browser.findElement(By.id(&quot;customer-first-name-1500980255&quot;)).sendKeys( new String[] { vars.get(&apos;firstname&apos;) } );
System.out.println(&quot;*******enter first name*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-last-name-1500980284&quot;)));
WDS.browser.findElement(By.id(&quot;customer-last-name-1500980284&quot;)).sendKeys( new String[] { vars.get(&apos;lastname&apos;) } );
System.out.println(&quot;*******enter last name*********&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--btn--check checkbox__icon&apos;])[4]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;authorized-communication-e-mail-1500981174&quot;)));
System.out.println(&quot;*******Clicked email checkbox*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;default-phone&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;phone&apos;) } );
System.out.println(&quot;*******enter phone number*********&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;customer-e-mail-1500981682&quot;)));
WDS.browser.findElement(By.id(&quot;customer-e-mail-1500981682&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
System.out.println(&quot;*******enter email*********&quot;);	
if (WDS.browser.findElements(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-manufacturer-1500983788&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-manufacturer-1500983788&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-manufacturer-1500983788&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of Manufacturer is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== Manufacturer element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-year-1500983849&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-year-1500983849&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-year-1500983849&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-year-1500983849&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of year is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== year element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected year from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-model-1500983880&quot;)).size() &gt; 0){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-model-1500983880&quot;)));		
	int idx = 0;
	WDS.browser.findElement(By.id(&quot;vehicle-model-1500983880&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-model-1500983880&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of model is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== model element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected model from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);
if (WDS.browser.findElements(By.id(&quot;vehicle-transmission-1500983905&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-transmission-1500983905&quot;)));				
	int idx = 0;
	try {
		WDS.browser.findElement(By.id(&quot;vehicle-transmission-1500983905&quot;)).click();	
	}
	catch(org.openqa.selenium.StaleElementReferenceException ex)
	{
		System.out.println(&quot;Stale element for transmission&quot;);  
	}
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-transmission-1500983905&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of transmission is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== transmission element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== Selected transmission from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-engine-1500983934&quot;)).size() &gt; 0){ 
	//lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-engine-1500983934&quot;)));					
	int idx = 0;
	try {
		WDS.browser.findElement(By.id(&quot;vehicle-engine-1500983934&quot;)).click();	
	}
	catch(org.openqa.selenium.StaleElementReferenceException ex)
	{
		System.out.println(&quot;Stale element for engine&quot;);  
	}	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-engine-1500983934&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of engine is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== engine element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== engine Manufacturer from index ******** &quot;+ (index));      	
     }
}
Thread.sleep(8000);	
if (WDS.browser.findElements(By.id(&quot;vehicle-drive-1500983970&quot;)).size() &gt; 0){ 
	int idx = 0;
	lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle-drive-1500983970&quot;)));			
	WDS.browser.findElement(By.id(&quot;vehicle-drive-1500983970&quot;)).click();	
	Thread.sleep(2000);	
     List elements = WDS.browser.findElements(By.xpath(&quot;//div[@id=&apos;vehicle-drive-1500983970&apos;]/div[2]/div&quot;));
     int size = elements.size();
     int index = size.intdiv(2);
	System.out.println(&quot;&lt;====== Size of drive is ******** &quot;+ size);     
	System.out.println(&quot;&lt;====== drive element to be clicked is ******** &quot;+ index);   	
     if(size &gt; 0){
		lWait.until(ExpectedConditions.elementToBeClickable(elements.get(index)));	
     	elements.get(index).click();
		System.out.println(&quot;&lt;====== drive Manufacturer from index ******** &quot;+ (index));      	
     }
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).clear();
WDS.browser.findElement(By.xpath(&quot;//input[contains(@id,&apos;vehicle-odometer&apos;)]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
System.out.println(&quot; Entered odometer &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;c-edit-appt-toolbar__next __c-edit-appt-toolbar__next--is-loading&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Unscheduled&apos;]&quot;)).click();
System.out.println(&quot; Go to unscheduled tab &quot;);   
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-edit-appt-tab__selected-services&apos;]&quot;)));
if (WDS.browser.findElements(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])&quot;)).size() &gt; 3){ 
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;(//*[@class=&apos;icon icon--arrow-incircle-right icon--button&apos;])[3]&quot;)).click();
	System.out.println(&quot; select type of repairing &quot;);	
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500971921&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;c-date-stats__calendar&apos;]&quot;)));
Thread.sleep(3000);	
if (WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;c-date-stats__time c-date-stats__time--selected&apos;]&quot;)).size() != 1){ 
	System.out.println(&quot;&lt;====== Default time is booked, choose another time ******** &quot;);   	
	Thread.sleep(3000);		
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)));		
	WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-date-stats__time&apos;])[1]&quot;)).click();
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;next-1500972347&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;add-comment-1500969280&quot;)));
WDS.browser.findElement(By.id(&quot;add-comment-1500969280&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot; Entered comment &quot;);   
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;create-1500972101&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@id = &apos;dashboard-create-bnt&apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully created appointment====&gt;&quot;);
Thread.sleep(2000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Advisor Checkin" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="Chrome Driver Configuration" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Users\VISHAL\Downloads\chromedriver_win32\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/SetUp/JMeter/apache-jmeter-5.3/apache-jmeter-5.3/bin/examples/DFXACIAutomall.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 3 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(15000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(15000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
}
Thread.sleep(10000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
Thread.sleep(30000);
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
Thread.sleep(3000);	
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(1500);
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
Thread.sleep(8000);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
Thread.sleep(8000);
System.out.println(&quot;&lt;====== successful signature&quot;);	
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
Thread.sleep(8000);
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
Thread.sleep(4000);
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
Thread.sleep(20000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-Wait1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 3 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(15000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(15000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
}
Thread.sleep(10000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
Thread.sleep(30000);
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
Thread.sleep(3000);	
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
Thread.sleep(4000);	
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(1500);
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
Thread.sleep(8000);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
Thread.sleep(8000);
System.out.println(&quot;&lt;====== successful signature&quot;);	
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
Thread.sleep(8000);
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
Thread.sleep(4000);
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
Thread.sleep(20000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-Test2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 5 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;decodevin&quot;)));
//WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;decodevin&quot;)));
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
//WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-proceed&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
System.out.println(&quot;&lt;====== successful signature&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
//WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)).click();
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-grey&apos; and @ng-click=&apos;showPartsPickPdf()&apos;]&quot;)));
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-STAGE2v0" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 5 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;decodevin&quot;)));
//WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;decodevin&quot;)));
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
//WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-proceed&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
System.out.println(&quot;&lt;====== successful signature&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
//WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)).click();
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-grey&apos; and @ng-click=&apos;showPartsPickPdf()&apos;]&quot;)));
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-STAGEv1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 5 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;decodevin&quot;)));
//WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;decodevin&quot;)));
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));	
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));		
	WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
//WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-proceed&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
System.out.println(&quot;&lt;====== successful signature&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span&quot;)));
//WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span&quot;)).click();
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-grey&apos; and @ng-click=&apos;showPartsPickPdf()&apos;]&quot;)));
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-STAGE2v2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 3 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl); 
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;decodevin&quot;)));
//WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();	
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;decodevin&quot;)));
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));	
	//WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
	WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));	
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));		
	//WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
	WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));	
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
//WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-proceed&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);
Thread.sleep(5000);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
System.out.println(&quot;&lt;====== successful signature&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span[text()= &apos;COMPLETE &apos;]&quot;)));
//WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span[text()= &apos;COMPLETE &apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span[text()= &apos;COMPLETE &apos;]&quot;)).click();
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-grey&apos; and @ng-click=&apos;showPartsPickPdf()&apos;]&quot;)));
Thread.sleep(2000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-ACI-STAGE2-LoopSolution" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl); 
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnOK&quot;)));	
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));	
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;decodevin&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;decodevin&quot;)));
Thread.sleep(60000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));	
	WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));	
}
Thread.sleep(10000);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
	lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));		
	WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));	
}
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-proceed&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);
Thread.sleep(5000);	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
System.out.println(&quot;&lt;====== successfully history tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully walk around&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
System.out.println(&quot;&lt;====== successful signature&quot;);	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;saveSign&quot;)));	
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span[text()= &apos;COMPLETE &apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@class=&apos;btn btn-blue&apos;]/span[text()= &apos;COMPLETE &apos;]&quot;)));	
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@class=&apos;btn btn-grey&apos; and @ng-click=&apos;showPartsPickPdf()&apos;]&quot;)));
Thread.sleep(2000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="GaryScript" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
java.util.Set windowHandles;
String preHandle, currentHandle;
//var pkg = JavaImporter(org.openqa.selenium);
//var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
//var ui = JavaImporter(org.openqa.selenium.support.ui);
// Load the home page
WDS.browser.get(baseUrl);
var wait = new WebDriverWait(WDS.browser, 60);
//var wait2 = new WebDriverWait(WDS.browser, 0 , 10);
//Here 7000 is the amount of milliseconds that code wait till it sees the specified username element
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
//Thread.sleep(10000);
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
//Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
//Thread.sleep(3000);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
//Thread.sleep(3000);
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[2]&quot;)).click();
Thread.sleep(10000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
    if (!handle.equals(preHandle)){
        WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
//Thread.sleep(3000);
wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;vehicle_vin_input&quot;)));
WDS.browser.findElement(By.id(&quot;vehicle_vin_input&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
//Thread.sleep(3000);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;decodevin&quot;)));
WDS.browser.findElement(By.id(&quot;decodevin&quot;)).click();  
Thread.sleep(10000);
System.out.println(&quot;&lt;====== Vin decoded successfully&quot;);
//wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)));
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;STORED DATA WARNING&apos;]&quot;)).size() &gt; 0){
    System.out.println(&quot;&lt;====== ignore before&quot;);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)));
    WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;IGNORE &apos;]&quot;)).click();
    System.out.println(&quot;&lt;====== ignore clicked&quot;);
}
Thread.sleep(10000);
//wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)));
        System.out.println(&quot;&lt;====== cancel before&quot;);
if(WDS.browser.findElements(By.xpath(&quot;//div[@class=&apos;modal-header&apos;]/h3[text()=&apos;Warning&apos;]&quot;)).size() &gt; 0){
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)));
    WDS.browser.findElement(By.xpath(&quot;//span[@class = &apos;vertical-align-middle&apos; and text()=&apos;Cancel &apos;]&quot;)).click();
        System.out.println(&quot;&lt;====== cancel clicked&quot;);
//*[@id=&quot;-template-modal-dms-servicelaneoverwrite-0AP&quot;]/div/div/form/div/button[2]
    //wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//*[@id=&apos;-template-modal-dms-servicelaneoverwrite-0AP&apos;]/div/div/form/div/button[2]]&quot;)));
    //WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;-template-modal-dms-servicelaneoverwrite-0AP&apos;]/div/div/form/div/button[2]]&quot;)).click();
}
//Thread.sleep(20000);
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@title=&apos;Odometer&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;mileage&apos;) } );
//Thread.sleep(3000);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-proceed&quot;)));
WDS.browser.findElement(By.id(&quot;g-proceed&quot;)).click();
//Thread.sleep(60000);
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)));
System.out.println(&quot;&lt;====== successfully go to concern tab&quot;);  
WDS.browser.findElement(By.xpath(&quot;(//span[@class=&apos;title ng-binding&apos;])[1]&quot;)).click();
//Thread.sleep(3000);   
System.out.println(&quot;&lt;====== successfully select conceern&quot;);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-cproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-cproceed&quot;)));
//Thread.sleep(8000);   
System.out.println(&quot;&lt;====== successfully concern tab&quot;);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-hproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-hproceed&quot;)));
//Thread.sleep(8000);   
System.out.println(&quot;&lt;====== successfully history tab&quot;);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-sproceed&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-sproceed&quot;)));
//Thread.sleep(8000);   
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
System.out.println(&quot;&lt;====== successfully services tab&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;g-wproceed&apos;]/span&quot;)));
//Thread.sleep(8000);   
System.out.println(&quot;&lt;====== successfully walk around&quot;);
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@name=&apos;tagNumber&apos;]&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
//Thread.sleep(3000);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;g-aproceed&quot;)));
System.out.println(&quot;&lt;====== successfully entered tag&quot;);
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;g-aproceed&quot;)));
//Thread.sleep(8000);   
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;custom-checkbox checkbox-signature&apos;]&quot;)));
//Thread.sleep(8000);
System.out.println(&quot;&lt;====== successful signature&quot;);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;signature&quot;)));
WDS.browser.findElement(By.id(&quot;signature&quot;)).click();
//Thread.sleep(8000);
wait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;saveSign&quot;)));
WDS.browser.findElement(By.id(&quot;saveSign&quot;)).click();
System.out.println(&quot;&lt;====== successfully saved sign&quot;);
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;COMPLETE &apos;]&quot;)));
System.out.println(&quot;&lt;====== successfully click complete button&quot;);
//Thread.sleep(400000);
//*[@id=&quot;modalCustomerResult&quot;]/form/div/div[3]/a
//wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//*[@id=&apos;modalCustomerResult&apos;]/form/div/div[3]/a&quot;)));
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//*[@id=&apos;modalCustomerResult&apos;]/form/div/div[2]/div[2]/div[2]/button&quot;)));
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Dashboard" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="Chrome Driver Configuration" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Users\VISHAL\Downloads\chromedriver_win32\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/SetUp/JMeter/apache-jmeter-5.3/apache-jmeter-5.3/bin/examples/dfx.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-SD" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)).click();
Thread.sleep(120000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Vehicle queue&apos;]&quot;)).click();
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)).click();
Thread.sleep(5000);
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;text&apos; and text()=&apos;Details&apos;]&quot;)).click();
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)).click();
Thread.sleep(5000);
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { &quot;&quot; } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-subject&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-message&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)).click();
Thread.sleep(30000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-SD-Wait" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
Thread.sleep(3000);
WDS.browser.switchTo().defaultContent();
Thread.sleep(3000);
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
Thread.sleep(1500);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)).click();
Thread.sleep(30000);
windowHandles = WDS.browser.getWindowHandles();
//System.out.println(&quot;&lt;====== The page is changed from &apos;&quot;+ WDS.browser.getTitle()+&quot;&apos; to a new window ======&gt;&quot;);
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Vehicle queue&apos;]&quot;)).click();
Thread.sleep(10000);
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)).click();
Thread.sleep(5000);
lWait.until(Expected Conditions.visibilityOfElementLocated(By.xpath(&quot;//div[@data-title=&apos;Parts Clerk&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;text&apos; and text()=&apos;Details&apos;]&quot;)).click();
Thread.sleep(10000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)).click();
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-address&quot;)));			
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { &quot;&quot; } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-subject&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.id(&quot;email-message&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
Thread.sleep(3000);
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;loader&apos;])[10]&quot;)));	
Thread.sleep(5000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-SD-Test2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)).click();
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Vehicle queue&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@data-title=&apos;Parts Clerk&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;text&apos; and text()=&apos;Details&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-address&quot;)));			
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { &quot;&quot; } );
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-subject&quot;)));	
WDS.browser.findElement(By.id(&quot;email-subject&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-message&quot;)));	
WDS.browser.findElement(By.id(&quot;email-message&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;loader&apos;])[10]&quot;)));	
System.out.println(&quot;Email sent from SD--&gt;Scenario finished &quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-SD-Stagev1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)).click();
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Vehicle queue&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@data-title=&apos;Parts Clerk&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;text&apos; and text()=&apos;Details&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-address&quot;)));			
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { &quot;&quot; } );
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-subject&quot;)));	
WDS.browser.findElement(By.id(&quot;email-subject&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-message&quot;)));	
WDS.browser.findElement(By.id(&quot;email-message&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;loader&apos;])[10]&quot;)));	
System.out.println(&quot;Email sent from SD--&gt;Scenario finished &quot;);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="NFT-SD-Stage2-LoopSolution" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.findElement(By.id(&quot;btnOK&quot;)).click();
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;box-area&apos;])[1]&quot;)).click();
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Vehicle queue&apos;]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;c-lane-list__item__inner&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@data-title=&apos;Parts Clerk&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;text&apos; and text()=&apos;Details&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;control control--primary control--size-32 control--vertical&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-address&quot;)));			
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { &quot;&quot; } );
WDS.browser.findElement(By.id(&quot;email-address&quot;)).sendKeys( new String[] { vars.get(&apos;email&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-subject&quot;)));	
WDS.browser.findElement(By.id(&quot;email-subject&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;email-message&quot;)));	
WDS.browser.findElement(By.id(&quot;email-message&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//button[@class=&apos;button button--primary button--large button--bounded-width&apos; and text()=&apos;Send&apos;])[1]&quot;)).click();
lWait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(&quot;(//div[@class=&apos;loader&apos;])[10]&quot;)));	
System.out.println(&quot;Email sent from SD--&gt;Scenario finished &quot;);
Thread.sleep(2000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Technical Inspection" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="Chrome Driver Configuration" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Users\VISHAL\Downloads\chromedriver_win32\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/SetUp/JMeter/apache-jmeter-5.3/apache-jmeter-5.3/bin/examples/DFXACIAutomall.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="TI-Test2Script1-v.1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
//String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 1 * 60;
int preOdometer, postOdometer;
String strPreOdometer, strPostOdometer,strOdometerLocator, VIN, shortVIN;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnOK&quot;)));
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;(//div[@class=&apos;icon-box&apos;])[9]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;icon-box&apos;])[9]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));	
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
Thread.sleep(30000);
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;createEvirIframe&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;createEvirIframe&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVINDecode&quot;)));
WDS.browser.findElement(By.id(&quot;txtVINDecode&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
Thread.sleep(2000);
//Actions actions = new Actions(WDS.browser);
//WebElement elementLocator = WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;));
//actions.doubleClick(elementLocator).perform();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)).click();
Thread.sleep(5000);
preOdometer  = ((int)(Math.random() * 999999)) % 1000;
postOdometer = ((int)(Math.random() * 999999)) % 1000;
strPreOdometer = String.valueOf(preOdometer);
strPostOdometer = String.valueOf(postOdometer);
System.out.println(&quot;Pre Odometer is  &quot;+ preOdometer);
System.out.println(&quot;Post Odometer is  &quot;+ postOdometer);
strOdometerLocator = strPreOdometer.concat(&quot;,&quot;).concat(strPostOdometer);
System.out.println(&quot;String Odometer locator is  &quot;+ strOdometerLocator);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtMileages&quot;)));
WDS.browser.findElement(By.id(&quot;txtMileages&quot;)).sendKeys( new String[] { strPreOdometer.concat(strPostOdometer) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtCustComments&quot;)));
WDS.browser.findElement(By.id(&quot;txtCustComments&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
Thread.sleep(15000);
WDS.browser.switchTo().defaultContent();
//lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+ vars.get(&apos;vin&apos;) +&quot;&apos;)])[1]&quot;)));
//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+ vars.get(&apos;vin&apos;) +&quot;&apos;)])[1]&quot;)).click();
VIN = vars.get(&apos;vin&apos;);
shortVIN = VIN.substring(9);
System.out.println(&quot;VIN is  &quot;+ VIN);
System.out.println(&quot;Short VIN is  &quot;+ shortVIN);
Thread.sleep(5000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVIN&quot;)));
WDS.browser.findElement(By.id(&quot;txtVIN&quot;)).sendKeys( new String[] { shortVIN } );
Thread.sleep(2000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)).click();
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)).click();
Thread.sleep(5000)
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
Thread.sleep(10000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="TI-Test2Script1-v.2-CreateAndDelete" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 2 * 60;
int preOdometer, postOdometer;
String strPreOdometer, strPostOdometer,strOdometerLocator, VIN, shortVIN;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnOK&quot;)));
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
//Thread.sleep(5000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));	
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
Thread.sleep(30000);
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
System.out.println(&quot;Create MPI&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;createEvirIframe&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;createEvirIframe&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVINDecode&quot;)));
WDS.browser.findElement(By.id(&quot;txtVINDecode&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
System.out.println(&quot;Enter VIN&quot;);
Thread.sleep(2000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)).click();
System.out.println(&quot;Click decode VIN&quot;);
Thread.sleep(5000);
preOdometer  = ((int)(Math.random() * 999999)) % 1000;
postOdometer = ((int)(Math.random() * 999999)) % 1000;
strPreOdometer = String.valueOf(preOdometer);
strPostOdometer = String.valueOf(postOdometer);
System.out.println(&quot;Pre Odometer is  &quot;+ preOdometer);
System.out.println(&quot;Post Odometer is  &quot;+ postOdometer);
strOdometerLocator = strPreOdometer.concat(&quot;,&quot;).concat(strPostOdometer);
System.out.println(&quot;String Odometer locator is  &quot;+ strOdometerLocator);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtMileages&quot;)));
WDS.browser.findElement(By.id(&quot;txtMileages&quot;)).sendKeys( new String[] { strPreOdometer.concat(strPostOdometer) } );
System.out.println(&quot;Enter odometer reading&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtCustComments&quot;)));
WDS.browser.findElement(By.id(&quot;txtCustComments&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
Thread.sleep(8000);
WDS.browser.switchTo().defaultContent();
VIN = vars.get(&apos;vin&apos;);
shortVIN = VIN.substring(9);
System.out.println(&quot;VIN is  &quot;+ VIN);
System.out.println(&quot;Short VIN is  &quot;+ shortVIN);
//Thread.sleep(5000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
//Thread.sleep(5000);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVIN&quot;)));
WDS.browser.findElement(By.id(&quot;txtVIN&quot;)).sendKeys( new String[] { shortVIN } );
//Thread.sleep(2000);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
//Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)).click();
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
System.out.println(&quot;Click on Save button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
System.out.println(&quot;Click on Mark Completed&quot;);
//Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)).click();
System.out.println(&quot;Do you want to delete Record?&quot;);
//Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)).click();
System.out.println(&quot;Click Yes - Delete record&quot;);
//Thread.sleep(5000)
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
//Thread.sleep(5000);
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="TI-Test2Script-FinalVersion" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 15 * 60;
int preOdometer, postOdometer, lenStrPreOdometer, lenStrPostOdometer;
String strPreOdometer, strPostOdometer,strOdometerLocator, VIN, shortVIN;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnOK&quot;)));
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));	
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
Thread.sleep(10000);
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
System.out.println(&quot;Create MPI&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;createEvirIframe&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;createEvirIframe&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVINDecode&quot;)));
WDS.browser.findElement(By.id(&quot;txtVINDecode&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
System.out.println(&quot;Enter VIN&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)).click();
System.out.println(&quot;Click decode VIN&quot;);
Thread.sleep(5000);
preOdometer  = ((int)(Math.random() * 999999)) % 1000;
postOdometer = ((int)(Math.random() * 999999)) % 1000;
strPreOdometer = String.valueOf(preOdometer);
strPostOdometer = String.valueOf(postOdometer);
System.out.println(&quot;Pre Odometer is  &quot;+ preOdometer);
System.out.println(&quot;Post Odometer is  &quot;+ postOdometer);
lenStrPreOdometer = strPreOdometer.length();
if (lenStrPreOdometer == 2) {
	System.out.println(&quot;Length of preodometer is 2&quot;);
	strPreOdometer = strPreOdometer.concat(&quot;1&quot;);
}
if (lenStrPreOdometer == 1) {
	System.out.println(&quot;Length of preodometer is 1&quot;);
	strPreOdometer = strPreOdometer.concat(&quot;12&quot;);
}
lenStrPostOdometer = strPostOdometer.length();
if (lenStrPostOdometer == 2) {
	System.out.println(&quot;Length of postodometer is 2&quot;);
	strPostOdometer = strPostOdometer.concat(&quot;1&quot;);
}
if (lenStrPostOdometer == 1) {
	System.out.println(&quot;Length of postodometer is 1&quot;);
	strPostOdometer = strPostOdometer.concat(&quot;12&quot;);
}
strOdometerLocator = strPreOdometer.concat(&quot;,&quot;).concat(strPostOdometer);
System.out.println(&quot;String Odometer locator is  &quot;+ strOdometerLocator);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtMileages&quot;)));
WDS.browser.findElement(By.id(&quot;txtMileages&quot;)).sendKeys( new String[] { strPreOdometer.concat(strPostOdometer) } );
System.out.println(&quot;Enter odometer reading&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtCustComments&quot;)));
WDS.browser.findElement(By.id(&quot;txtCustComments&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
Thread.sleep(10000);
WDS.browser.switchTo().defaultContent();
VIN = vars.get(&apos;vin&apos;);
shortVIN = VIN.substring(9);
System.out.println(&quot;VIN is  &quot;+ VIN);
System.out.println(&quot;Short VIN is  &quot;+ shortVIN);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
System.out.println(&quot;Click search button &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVIN&quot;)));
WDS.browser.findElement(By.id(&quot;txtVIN&quot;)).sendKeys( new String[] { shortVIN } );
System.out.println(&quot; Enter short VIN &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
System.out.println(&quot; Click search button &quot;);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)).click();
System.out.println(&quot; Select record from odometer reading &quot;);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)).click();
System.out.println(&quot;Select first section as OK &quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)).click();
System.out.println(&quot;Select second section as OK &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
System.out.println(&quot;Click on Save button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
System.out.println(&quot;Click on Mark Completed&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)).click();
System.out.println(&quot;Do you want to delete Record?&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)).click();
System.out.println(&quot;Click Yes - Delete record&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="TI-Test2Script-WorkingVersion" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;

// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 2 * 60;
int preOdometer, postOdometer, lenStrPreOdometer, lenStrPostOdometer;
String strPreOdometer, strPostOdometer,strOdometerLocator, VIN, shortVIN;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
java.util.Set windowHandles;
String preHandle, currentHandle;
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;delearInfo ng-star-inserted&apos;]&quot;)).click();
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;impersonate&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;impersonate&quot;)));
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtSearchDealerName&quot;)));
WDS.browser.findElement(By.id(&quot;txtSearchDealerName&quot;)).sendKeys( new String[] { vars.get(&apos;dealername&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnSubmit&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnSubmit&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//table[@id=&apos;dImpersonate&apos;]/tbody/tr[2]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;btnOK&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.id(&quot;btnOK&quot;)));
WDS.browser.switchTo().defaultContent();
preHandle = WDS.browser.getWindowHandle();
System.out.println(&quot;pre Title is  &quot;+ WDS.browser.getTitle());
System.out.println(&quot;pre handle is  &quot;+ preHandle);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//img[contains(@src,&apos;more.svg&apos;)]&quot;)));	
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a[text()=&apos;Technician Inspection&apos;]&quot;)));	
windowHandles = WDS.browser.getWindowHandles();
for (String handle :  windowHandles ){
	if (!handle.equals(preHandle)){
		WDS.browser.switchTo().window(handle);
          break;
     }
}
Thread.sleep(10000);
System.out.println(&quot;&lt;====== Moved to new windows &quot;);
System.out.println(&quot;New title is  &quot;+ WDS.browser.getTitle());
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/button[@id=&apos;createEvirBtn&apos;]&quot;)));
System.out.println(&quot;Create MPI&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;createEvirIframe&quot;)));
WDS.browser.switchTo().frame(WDS.browser.findElement(By.id(&quot;createEvirIframe&quot;)));
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVINDecode&quot;)));
WDS.browser.findElement(By.id(&quot;txtVINDecode&quot;)).sendKeys( new String[] { vars.get(&apos;vin&apos;) } );
System.out.println(&quot;Enter VIN&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Decode VIN&apos;]&quot;)).click();
System.out.println(&quot;Click decode VIN&quot;);
Thread.sleep(5000);
preOdometer  = ((int)(Math.random() * 999999)) % 1000;
postOdometer = ((int)(Math.random() * 999999)) % 1000;
strPreOdometer = String.valueOf(preOdometer);
strPostOdometer = String.valueOf(postOdometer);
System.out.println(&quot;Pre Odometer is  &quot;+ preOdometer);
System.out.println(&quot;Post Odometer is  &quot;+ postOdometer);
lenStrPreOdometer = strPreOdometer.length();
if (lenStrPreOdometer == 2) {
	System.out.println(&quot;Length of preodometer is 2&quot;);
	strPreOdometer = strPreOdometer.concat(&quot;1&quot;);
}
if (lenStrPreOdometer == 1) {
	System.out.println(&quot;Length of preodometer is 1&quot;);
	strPreOdometer = strPreOdometer.concat(&quot;12&quot;);
}
lenStrPostOdometer = strPostOdometer.length();
if (lenStrPostOdometer == 2) {
	System.out.println(&quot;Length of postodometer is 2&quot;);
	strPostOdometer = strPostOdometer.concat(&quot;1&quot;);
}
if (lenStrPostOdometer == 1) {
	System.out.println(&quot;Length of postodometer is 1&quot;);
	strPostOdometer = strPostOdometer.concat(&quot;12&quot;);
}
strOdometerLocator = strPreOdometer.concat(&quot;,&quot;).concat(strPostOdometer);
System.out.println(&quot;String Odometer locator is  &quot;+ strOdometerLocator);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtMileages&quot;)));
WDS.browser.findElement(By.id(&quot;txtMileages&quot;)).sendKeys( new String[] { strPreOdometer.concat(strPostOdometer) } );
System.out.println(&quot;Enter odometer reading&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtCustComments&quot;)));
WDS.browser.findElement(By.id(&quot;txtCustComments&quot;)).sendKeys( new String[] { vars.get(&apos;text&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Create&apos;]&quot;)));
Thread.sleep(10000);
WDS.browser.switchTo().defaultContent();
VIN = vars.get(&apos;vin&apos;);
shortVIN = VIN.substring(9);
System.out.println(&quot;VIN is  &quot;+ VIN);
System.out.println(&quot;Short VIN is  &quot;+ shortVIN);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
System.out.println(&quot;Click search button &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.id(&quot;txtVIN&quot;)));
WDS.browser.findElement(By.id(&quot;txtVIN&quot;)).sendKeys( new String[] { shortVIN } );
System.out.println(&quot; Enter short VIN &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//div/input[@id=&apos;btnEVIRSearch&apos;]&quot;)));
System.out.println(&quot; Click search button &quot;);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]&quot;)).click();
System.out.println(&quot; Select record from odometer reading &quot;);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[6]&quot;)).click();
System.out.println(&quot;Select first section as OK &quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//input[@data-original-title=&apos;Mark Section All OK&apos;])[7]&quot;)).click();
System.out.println(&quot;Select second section as OK &quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Save&apos;]&quot;)));
System.out.println(&quot;Click on Save button&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input[@value = &apos;Mark Completed&apos;]&quot;)));
System.out.println(&quot;Click on Mark Completed&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;&quot;+strOdometerLocator+&quot;&apos;)])[1]/ancestor::td/following-sibling::td/img[@src=&apos;images/remove.svg&apos;]&quot;)).click();
System.out.println(&quot;Do you want to delete Record?&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div/button[@type=&apos;button&apos; and text() = &apos;Yes&apos;]&quot;)).click();
System.out.println(&quot;Click Yes - Delete record&quot;);
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a/img[@src=&apos;/images/search.svg&apos;]&quot;)));
WDS.browser.close();
WDS.browser.switchTo().window(preHandle);
Thread.sleep(2000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Communication Dashboard" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">400</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="Chrome Driver Configuration" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Users\VISHAL\Downloads\chromedriver_win32\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/SetUp/JMeter/apache-jmeter-5.3/apache-jmeter-5.3/bin/examples/DFXACIAutomall.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="CD-v0.0" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import java.lang.Math;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 2 * 60;
int chatMessageLoopCount = 5;
int smsLoopCount = 1;
//int countofAdvisors = 250;
String cellNumber = &quot;6477120113&quot;;
String smsText = &quot;Dear Customer, hope you are doing good. This is dummy message from Load test. Please ignore. Cheers, Dealer-FX&quot;;
int index1, index2;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
System.out.println(&quot;&lt;====== Clicked on Submit button on login screen ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked on Chat icon on home screen ======&gt;&quot;);	
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked internal section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked send internal message ======&gt;&quot;);
//Implement Random selection of advisor
//index1  = ((int)(Math.random() * 999999)) % 10000;
index1  =  (int)((Math.random()*(250)+ 1)); 
System.out.println(&quot;&lt;====== Index1 is  ======&gt; &quot;+index1);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked first element at index ======&gt; &quot;+index1);
Thread.sleep(3000);
index2  =  (int)((Math.random()*(250) + 1)); 
System.out.println(&quot;&lt;====== Index2 is  ======&gt; &quot;+index2);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked second element at index ======&gt; &quot;+index2);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)).click();
Thread.sleep(5000);
System.out.println(&quot;&lt;====== Clicked forward arrow button to initiate the chat ======&gt;&quot;);
for (int chatMessageCount = 0; chatMessageCount &lt; chatMessageLoopCount; chatMessageCount++) {
	String requireChar = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     StringBuilder actualString = new StringBuilder();
     Random rnd = new Random();
     while (actualString.length() &lt; 5) { 
     	int index = (int) (rnd.nextFloat() * requireChar.length());
          actualString.append(requireChar.charAt(index));
	}
     String randomText = actualString.toString();
	System.out.println(&quot;&lt;====== Random text to be entered is ======&gt; &quot;+randomText);
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { randomText } );
	Thread.sleep(2000);//do not remove this sleep
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	//lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+randomText+&quot;&apos;]&quot;)));		
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for Internal customer message ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked customer section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked message customer ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)).sendKeys( new String[] { cellNumber } );
System.out.println(&quot;&lt;====== Entered cell number ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)).click();
System.out.println(&quot;&lt;====== Selected customer from the list for SMS ======&gt;&quot;);
for (int smsCount = 0; smsCount &lt; smsLoopCount; smsCount++) {
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { smsText } );
	Thread.sleep(2000);//do not remove this sleep
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	//lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+smsText+&quot;&apos;]&quot;)));		
}	
Thread.sleep(5000);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for SMS window ======&gt;&quot;);	
System.out.println(&quot;&lt;====== Closed the browser ======&gt;&quot;);
Thread.sleep(5000);
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="CD-v0.1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import java.lang.Math;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
//String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 1 * 60;
int chatMessageLoopCount = 5;
int smsLoopCount = 1;
int chatMessagefailureCount = 0;
int smsfailureCount = 0;
//int countofAdvisors = 250;
String cellNumber = &quot;6477120113&quot;;
String smsPrefix = &quot;Dear &quot;;
String smsSuffix = &quot;, hope you are doing good. This is dummy message from Load test. Please ignore. Thanks Dealer-FX&quot;;
String smsText = &quot;Dear Customer, hope you are doing good. This is dummy message from Load test. Please ignore. Thanks again. Bye. DFX&quot;;
int index1, index2;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
System.out.println(&quot;&lt;====== Clicked on Submit button on login screen ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked on Chat icon on home screen ======&gt;&quot;);	
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked internal section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked send internal message ======&gt;&quot;);
//Implement Random selection of advisor
//index1  = ((int)(Math.random() * 999999)) % 10000;
index1  =  (int)((Math.random()*(250)+ 1)); 
System.out.println(&quot;&lt;====== Index1 is  ======&gt; &quot;+index1);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked first element at index ======&gt; &quot;+index1);
Thread.sleep(3000);
index2  =  (int)((Math.random()*(250) + 1)); 
System.out.println(&quot;&lt;====== Index2 is  ======&gt; &quot;+index2);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked second element at index ======&gt; &quot;+index2);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)).click();
Thread.sleep(5000);
System.out.println(&quot;&lt;====== Clicked forward arrow button to initiate the chat ======&gt;&quot;);
for (int chatMessageCount = 0; chatMessageCount &lt; chatMessageLoopCount; chatMessageCount++) {
	String requireChar = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     StringBuilder actualString = new StringBuilder();
     Random rnd = new Random();
     while (actualString.length() &lt; 5) { 
     	int index = (int) (rnd.nextFloat() * requireChar.length());
          actualString.append(requireChar.charAt(index));
	}
     String randomText = actualString.toString();
	System.out.println(&quot;&lt;====== Random text to be entered is ======&gt; &quot;+randomText);
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { randomText } );
	Thread.sleep(2000);//do not remove this sleep
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	try {
		lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+randomText+&quot;&apos;]&quot;)));
	}
	catch(org.openqa.selenium.TimeoutException ex)
	{
		System.out.println(&quot;Timeout exception - Chat Message ---------- &quot;+ randomText +&quot; ---------- not found on UI&quot;);  
		chatMessagefailureCount = chatMessagefailureCount + 1;
		System.out.println(&quot;Current chat message failure count is &quot; +chatMessagefailureCount);  				
	}		
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for Internal customer message ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked customer section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked message customer ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)).sendKeys( new String[] { cellNumber } );
System.out.println(&quot;&lt;====== Entered cell number ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)).click();
System.out.println(&quot;&lt;====== Selected customer from the list for SMS ======&gt;&quot;);
for (int smsCount = 0; smsCount &lt; smsLoopCount; smsCount++) {
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { smsText } );
	Thread.sleep(2000);//do not remove this sleep
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	try {
		lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+smsText+&quot;&apos;]&quot;)));			
	}
	catch(org.openqa.selenium.TimeoutException ex)
	{
		System.out.println(&quot;Timeout exception - Chat Message ----------&quot;+ smsText +&quot; ---------- not found on UI&quot;);  
		smsfailureCount = smsfailureCount + 1;
		System.out.println(&quot;Current SMS failure count is &quot; +smsfailureCount);  				
	}		
}	
Thread.sleep(5000);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for SMS window ======&gt;&quot;);	
System.out.println(&quot;*****************Total chat message failure count is &quot;+ chatMessagefailureCount);  
System.out.println(&quot;*****************Total SMS failure count is &quot;+ smsfailureCount);  
System.out.println(&quot;&lt;====== Closed the browser ======&gt;&quot;);
Thread.sleep(5000);
if(smsfailureCount &gt; 0 || chatMessagefailureCount &gt; 0){
	throw new java.lang.InterruptedException();
}
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="CD-v0.2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.util.Set;
import java.util.List;
import java.lang.Math;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Sleeper;
import org.openqa.selenium.support.ui.WebDriverWait;
// Required to start counting time which will get reported at the end of this code.
WDS.sampleResult.sampleStart();
String baseUrl = &quot;https://stage2service.dealer-fx.com/logins/Login.2.aspx&quot;;
//String baseUrl = &quot;https://test2service.dealer-fx.com/logins/Login.2.aspx&quot;;
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables();
org.openqa.selenium.support.ui.WebDriverWait lWait;
int LONGTIMEOUT = 2 * 60;
int chatMessageLoopCount = 5;
int smsLoopCount = 1;
int chatMessagefailureCount = 0;
int smsfailureCount = 0;
//int countofAdvisors = 250;
String cellNumber = &quot;6477120113&quot;;
String smsPrefix = &quot;Dear &quot;;
String smsSuffix = &quot;, hope you are doing good. This is dummy message from Load test. Please ignore. Thanks Dealer-FX&quot;;
String smsText;
int index1, index2;
System.out.println(&quot;Driver long timeout is &quot;+ LONGTIMEOUT);
lWait = new WebDriverWait(WDS.browser, LONGTIMEOUT);
System.out.println(&quot;LWAIT Object is &quot;+ lWait);
// Load the home page
WDS.browser.get(baseUrl);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(&quot;txtFrameworkUserName&quot;)));
WDS.browser.findElement(By.id(&quot;txtFrameworkUserName&quot;)).sendKeys( new String[] { vars.get(&apos;username&apos;) } );
WDS.browser.findElement(By.id(&quot;txtFrameworkPassword&quot;)).sendKeys( new String[] { vars.get(&apos;password&apos;) } );
lWait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
WDS.browser.executeScript(&quot;arguments[0].click();&quot;, WDS.browser.findElement(By.xpath(&quot;//input [@type = &apos;submit&apos;]&quot;)));
System.out.println(&quot;&lt;====== Clicked on Submit button on login screen ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;material-icons&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked on Chat icon on home screen ======&gt;&quot;);	
Thread.sleep(5000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Internal&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked internal section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Send Internal Message&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked send internal message ======&gt;&quot;);
//Implement Random selection of advisor
//index1  = ((int)(Math.random() * 999999)) % 10000;
index1  =  (int)((Math.random()*(250)+ 1)); 
System.out.println(&quot;&lt;====== Index1 is  ======&gt; &quot;+index1);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index1+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked first element at index ======&gt; &quot;+index1);
Thread.sleep(3000);
index2  =  (int)((Math.random()*(250) + 1)); 
System.out.println(&quot;&lt;====== Index2 is  ======&gt; &quot;+index2);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[@class=&apos;ml-5 pt-2 user-name&apos;])[&quot;+index2+&quot;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked second element at index ======&gt; &quot;+index2);
Thread.sleep(3000);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//i[@class=&apos;material-icons&apos; and text()=&apos;arrow_forward&apos;]&quot;)).click();
Thread.sleep(5000);
System.out.println(&quot;&lt;====== Clicked forward arrow button to initiate the chat ======&gt;&quot;);
for (int chatMessageCount = 0; chatMessageCount &lt; chatMessageLoopCount; chatMessageCount++) {
	String requireChar = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     StringBuilder actualString = new StringBuilder();
     Random rnd = new Random();
     while (actualString.length() &lt; 5) { 
     	int index = (int) (rnd.nextFloat() * requireChar.length());
          actualString.append(requireChar.charAt(index));
	}
     String randomText = actualString.toString();
	System.out.println(&quot;&lt;====== Random text to be entered is ======&gt; &quot;+randomText);
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { randomText } );
	Thread.sleep(2000);
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	try {
		lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+randomText+&quot;&apos;]&quot;)));
	}
	catch(org.openqa.selenium.TimeoutException ex)
	{
		System.out.println(&quot;Timeout exception - Chat Message ---------- &quot;+ randomText +&quot; ---------- not found on UI&quot;);  
		chatMessagefailureCount = chatMessagefailureCount + 1;
		System.out.println(&quot;Current chat message failure count is &quot; +chatMessagefailureCount);  				
	}		
}
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for Internal customer message ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[text()=&apos;Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked customer section on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//span[@class=&apos;edit&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked edit on chat window ======&gt;&quot;);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//a[@class=&apos;dropdown-item&apos; and text()=&apos;Message Customer&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked message customer ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;search-bar col-auto mt-4&apos;]/input[@id=&apos;userValue&apos;]&quot;)).sendKeys( new String[] { cellNumber } );
System.out.println(&quot;&lt;====== Entered cell number ======&gt;&quot;);
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)));
WDS.browser.findElement(By.xpath(&quot;(//label[text()=&apos;Cell Phone&apos;])[1]&quot;)).click();
System.out.println(&quot;&lt;====== Selected customer from the list for SMS ======&gt;&quot;);
for (int smsCount = 0; smsCount &lt; smsLoopCount; smsCount++) {

	String reqChar = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     StringBuilder randomString = new StringBuilder();
     Random rnd = new Random();
     while (randomString.length() &lt; 5) { 
     	int index = (int) (rnd.nextFloat() * reqChar.length());
          randomString.append(reqChar.charAt(index));
	}
     String smsCustomerName = randomString.toString();
	System.out.println(&quot;&lt;====== Name of customer for SMS is  ======&gt; &quot;+smsCustomerName);
	smsText = smsPrefix.concat(smsCustomerName).concat(smsSuffix);
	System.out.println(&quot;&lt;====== SMS to be sent to customer is ======&gt; &quot;+smsText);		
	lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)));
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { smsText } );
	Thread.sleep(2000);//do not remove this sleep
	WDS.browser.findElement(By.xpath(&quot;//dfx-message-input/div/div/input[@type=&apos;text&apos;]&quot;)).sendKeys( new String[] { Keys.ENTER } );
	Thread.sleep(5000);	
	try {
		lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-body me&apos;]/p[text()=&apos;&quot;+smsText+&quot;&apos;]&quot;)));			
	}
	catch(org.openqa.selenium.TimeoutException ex)
	{
		System.out.println(&quot;Timeout exception - Chat Message ----------&quot;+ smsText +&quot; ---------- not found on UI&quot;);  
		smsfailureCount = smsfailureCount + 1;
		System.out.println(&quot;Current SMS failure count is &quot; +smsfailureCount);  				
	}		
}	
Thread.sleep(5000);	
lWait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)));
WDS.browser.findElement(By.xpath(&quot;//div[@class=&apos;message-wrapper&apos;]/div/div/a/dfx-icon[@icon=&apos;close&apos;]&quot;)).click();
System.out.println(&quot;&lt;====== Clicked close button for SMS window ======&gt;&quot;);	
System.out.println(&quot;*****************Total chat message failure count is &quot;+ chatMessagefailureCount);  
System.out.println(&quot;*****************Total SMS failure count is &quot;+ smsfailureCount);  
System.out.println(&quot;&lt;====== Closed the browser ======&gt;&quot;);
Thread.sleep(5000);
if(smsfailureCount &gt; 0 || chatMessagefailureCount &gt; 0){
	System.out.println(&quot;*****************Throwing exception forcefully**************&quot;); 	
	throw new java.lang.InterruptedException();
}
WDS.sampleResult.sampleEnd();</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
